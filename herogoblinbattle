// Utility function to create a delay
function sleep(ms) {
    return new Promise(resolve => setTimeout(resolve, ms));
  }
  
  // Function to create a text-based battle animation
  async function battleAnimation(actionText) {
    process.stdout.write(actionText); // Print action text
    for (let i = 0; i < 5; i++) { // Animate dots over 5 seconds
      await sleep(1000);
      process.stdout.write(".");
    }
    console.log("\n"); // New line after animation
  }
  
  // Player class
  class Player {
    constructor(plyName, health, attackPower, defense) {
      this.plyName = plyName;
      this.health = health;
      this.attackPower = attackPower;
      this.defense = defense;
    }
  
    async attack(opponent) {
      await battleAnimation(`${this.plyName} attacks ${opponent.plyName}`);
      
      let damage = this.attackPower - opponent.defense;
      if (damage < 0) damage = 0; // Prevent negative damage
  
      opponent.health -= damage;
      console.log(`${this.plyName} deals ${damage} damage!`);
      console.log(`${opponent.plyName} now has ${opponent.health} health left.\n`);
    }
  }
  
  // Enemy class
  class Enemy {
    constructor(plyName, health, attackPower, defense) {
      this.plyName = plyName;
      this.health = health;
      this.attackPower = attackPower;
      this.defense = defense;
    }
  
    async attack(opponent) {
      await battleAnimation(`${this.plyName} attacks ${opponent.plyName}`);
      
      let damage = this.attackPower - opponent.defense;
      if (damage < 0) damage = 0;
  
      opponent.health -= damage;
      console.log(`${this.plyName} deals ${damage} damage!`);
      console.log(`${opponent.plyName} now has ${opponent.health} health left.\n`);
    }
  }
  
  // Create player and enemy
  const player = new Player("Hero", 100, 20, 5);
  const enemy = new Enemy("Goblin", 80, 15, 3);
  
  // Battle loop with delays
  async function startBattle() {
    console.log("🏹 Battle begins! 🏹\n");
    
    while (player.health > 0 && enemy.health > 0) {
      console.log("🔥 Player's turn...");
      await player.attack(enemy);
  
      if (enemy.health <= 0) {
        console.log(`💀 ${enemy.plyName} has been defeated! 🎉 ${player.plyName} wins!`);
        break;
      }
  
      console.log("👹 Enemy's turn...");
      await enemy.attack(player);
  
      if (player.health <= 0) {
        console.log(`💀 ${player.plyName} has been defeated! 👿 ${enemy.plyName} wins!`);
        break;
      }
    }
    console.log("\n🏁 Battle over.");
  }
  
  // Start the battle
  startBattle();
  
